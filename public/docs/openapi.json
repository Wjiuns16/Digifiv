{
  "openapi": "3.0.3",
  "info": {
    "description": "Digifiv Integration API",
    "version": "1.0.0",
    "title": "Digifiv Swagger OpenAPI"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/{basePath}",
      "description": "Local API Server",
      "variables": {
        "port": {
          "default": "8000"
        },
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "specifies the page number of the list to be displayed",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "limits the number of items on a page",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 10
        }
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "description": "order by",
        "required": false,
        "schema": {
          "type": "string",
          "default": "orderId"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "sorting method",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "asc"
        }
      }
    },
    "schemas": {
      "Pagination": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "totalData": {
            "type": "integer",
            "example": 10
          },
          "perPage": {
            "type": "integer",
            "example": 10
          },
          "nextPage": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "OKRequest": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Invalid Request."
          },
          "data": {
            "type": "string",
            "example": null
          }
        }
      },
      "UnauthorizedRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 401
          },
          "result": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Unauthorized Request."
          },
          "data": {
            "type": "string",
            "example": null
          }
        }
      },
      "UserModelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Hilma Nikolaus"
          },
          "email": {
            "type": "string",
            "example": "mason85@example.net"
          },
          "emailVerifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          }
        }
      },
      "EventModelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "event 1"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "example": "ACTIVE"
          },
          "totalTickets": {
            "type": "integer",
            "example": 20
          },
          "availableTickets": {
            "type": "integer",
            "example": 20
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          }
        }
      },
      "BookingModelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "user": {
            "$ref": "#/components/schemas/UserModelResponse"
          },
          "event": {
            "$ref": "#/components/schemas/EventModelResponse"
          },
          "numberOfTickets": {
            "type": "integer",
            "example": 2
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "CONFIRMED",
              "CANCELLED"
            ],
            "example": "PENDING"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-05 02:55:34"
          }
        }
      },
      "BookingListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BookingModelResponse"
                }
              }
            }
          }
        }
      },
      "BookingQueryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingModelResponse"
              }
            ]
          }
        }
      },
      "BookingEventRequest": {
        "type": "object",
        "required": [
          "event_id",
          "number_of_tickets"
        ],
        "properties": {
          "name": {
            "type": "integer",
            "example": 1
          },
          "number_of_tickets": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "EventListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventModelResponse"
                }
              }
            }
          }
        }
      },
      "EventCreateRequest": {
        "type": "object",
        "required": [
          "name",
          "status",
          "total_tickets"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "event 1"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "total_tickets": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "EventCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventModelResponse"
              }
            ]
          }
        }
      },
      "EventQueryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventModelResponse"
              }
            ]
          }
        }
      },
      "EventEditRequest": {
        "type": "object",
        "required": [
          "name",
          "status",
          "total_tickets",
          "available_tickets"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "event 1"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "total_tickets": {
            "type": "integer",
            "example": 20
          },
          "available_tickets": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "mason85@example.net"
          },
          "password": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/UserModelResponse"
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "example": "1|BjyNkEPGlBxfXyENPK1Qfl8MzsYOqUI8xkXjyOKKcac33873"
                      },
                      "tokenType": {
                        "type": "string",
                        "example": "Bearer"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "User - Auth"
        ],
        "summary": "User Login",
        "operationId": "userLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    },
                    {
                      "$ref": "#/components/schemas/UserLoginResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedRequest"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "List Event",
        "operationId": "listEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "event 1"
            }
          },
          {
            "name": "minTotalTickets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "maxTotalTickets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "minAvailableTickets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "maxAvailableTickets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    },
                    {
                      "$ref": "#/components/schemas/EventListResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create Event",
        "operationId": "createEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    },
                    {
                      "$ref": "#/components/schemas/EventCreateResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Query Event",
        "operationId": "getEventDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    },
                    {
                      "$ref": "#/components/schemas/EventQueryResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update Event",
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OKRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Delete Event",
        "operationId": "deleteEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/bookings": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "List Booking",
        "operationId": "listBooking",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "name": "eventName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "event 1"
            }
          },
          {
            "name": "minNumberOfTickets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "maxNumberOfTickets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "CONFIRMED",
                "CANCELLED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    },
                    {
                      "$ref": "#/components/schemas/BookingListResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedRequest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Book Event",
        "operationId": "BookTicketEvent",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedRequest"
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Query Booking",
        "operationId": "getBookingDetail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OKRequest"
                    },
                    {
                      "$ref": "#/components/schemas/BookingQueryResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedRequest"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "summary": "Transaction Approval Status",
        "operationId": "transactionApprovalStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "SUCCESS",
                      "FAILED"
                    ],
                    "example": "SUCCESS"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OKRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      }
    }
  }
}